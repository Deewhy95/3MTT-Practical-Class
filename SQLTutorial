-- Creating employee demographics table with the employeeID as primary key
CREATE TABLE [dbo].[EmployeeDemographics] (
    [EmployeeID]    INT          NOT NULL,
    [FirstName]     VARCHAR (50) NULL,
    [LastName]      VARCHAR (50) NULL,
    [Gender]        VARCHAR (50) NULL,
    [Age]           INT          NULL,
    [LengthService] INT          NULL,
    CONSTRAINT [PK_EmployeeDemographics] PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


-- display the top 1000 employee demographics
SELECT TOP (1000) [EmployeeID]
      ,[FirstName]
      ,[LastName]
      ,[Gender]
      ,[Age]
      ,[LengthService]
  FROM [SQLTutorial].[dbo].[EmployeeDemographics]


-- Creating employee Salary table 
CREATE TABLE [dbo].[EmployeeSalary$] (
    [EmployeeID]     INT          NOT NULL,
    [JobTitle]       VARCHAR (50) NULL,
    [Salary]         INT          NULL,
    [DepartmentName] VARCHAR (50) NULL,
    [StoreLocation]  VARCHAR (50) NULL,
    CONSTRAINT [PK_EmployeeSalary$] PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);

-- display the top 1000 employee salary
SELECT TOP (1000) [EmployeeID]
      ,[JobTitle]
      ,[Salary]
      ,[DepartmentName]
      ,[StoreLocation]
  FROM [SQLTutorial].[dbo].[EmployeeSalary$]


-- display the top 1000 warehouse employee Demographic salary
SELECT TOP (1000) [EmployeeID]
      ,[LastName]
      ,[FirstName]
      ,[Age]
      ,[Gender]
      ,[LengthService]
  FROM [SQLTutorial].[dbo].[WarehouseEmployeeDemographics]
  


  -- select the top 15 Minimun salary, Maximum salary and Average Salary across the dapartment
SELECT Top(15) [DepartmentName],
    COUNT(DepartmentName) AS Number_of_Department,
    AVG(Salary) AS AverageSalary,
    MIN(Salary) AS MinimumSalary,
    MAX(Salary) AS MaximumSalary
FROM EmployeeSalary$
GROUP BY DepartmentName
ORDER BY COUNT(DepartmentName) DESC